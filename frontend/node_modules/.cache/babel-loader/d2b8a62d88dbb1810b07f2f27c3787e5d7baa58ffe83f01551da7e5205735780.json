{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ipsit\\\\frontend\\\\src\\\\components\\\\HealthRecommendations.js\",\n  _s = $RefreshSig$();\n// Import necessary modules\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthRecommendations = () => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]); // State to store health recommendations\n  const [error, setError] = useState(''); // State to store error messages (if any)\n\n  // Function to fetch recommendations from the backend\n  const axiosFetchData = async () => {\n    try {\n      // Send a GET request to your backend API to fetch the recommendations\n      const response = await axios.get('http://localhost:1240/health'); // Update this URL to your backend endpoint\n      setRecommendations(response.data); // Set the recommendations in state\n      setError(''); // Clear error (if any)\n    } catch (err) {\n      console.error('Error fetching recommendations:', err);\n      setError('Failed to load recommendations. Please try again.'); // Set an error message\n    }\n  };\n\n  // Use useEffect to fetch recommendations on component load and every refresh\n  useEffect(() => {\n    axiosFetchData();\n  }, []); // Empty dependency array ensures this runs only once on component mount\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Health Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          padding: '10px',\n          marginBottom: '10px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: rec.recommendation\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the component\n_s(HealthRecommendations, \"t/OkL6txyT+19NGzDjnA3TbCOlE=\");\n_c = HealthRecommendations;\nexport default HealthRecommendations;\nvar _c;\n$RefreshReg$(_c, \"HealthRecommendations\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HealthRecommendations","_s","recommendations","setRecommendations","error","setError","axiosFetchData","response","get","data","err","console","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","color","listStyleType","map","rec","index","border","borderRadius","marginBottom","backgroundColor","recommendation","_c","$RefreshReg$"],"sources":["D:/Ipsit/frontend/src/components/HealthRecommendations.js"],"sourcesContent":["// Import necessary modules\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Define the component\r\nconst HealthRecommendations = () => {\r\n  const [recommendations, setRecommendations] = useState([]); // State to store health recommendations\r\n  const [error, setError] = useState(''); // State to store error messages (if any)\r\n\r\n  // Function to fetch recommendations from the backend\r\n  const axiosFetchData = async () => {\r\n    try {\r\n      // Send a GET request to your backend API to fetch the recommendations\r\n      const response = await axios.get(('http://localhost:1240/health')); // Update this URL to your backend endpoint\r\n      setRecommendations(response.data); // Set the recommendations in state\r\n      setError(''); // Clear error (if any)\r\n    } catch (err) {\r\n      console.error('Error fetching recommendations:', err);\r\n      setError('Failed to load recommendations. Please try again.'); // Set an error message\r\n    }\r\n  };\r\n\r\n  // Use useEffect to fetch recommendations on component load and every refresh\r\n  useEffect(() => {\r\n    axiosFetchData();\r\n  }, []); // Empty dependency array ensures this runs only once on component mount\r\n\r\n  // Render the component\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Health Recommendations</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n        {recommendations.map((rec, index) => (\r\n          <li\r\n            key={index}\r\n            style={{\r\n              border: '1px solid #ccc',\r\n              borderRadius: '5px',\r\n              padding: '10px',\r\n              marginBottom: '10px',\r\n              backgroundColor: '#f9f9f9',\r\n            }}\r\n          >\r\n            {rec.recommendation}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the component\r\nexport default HealthRecommendations;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,8BAA+B,CAAC,CAAC,CAAC;MACpEL,kBAAkB,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACnCJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,iCAAiC,EAAEM,GAAG,CAAC;MACrDL,QAAQ,CAAC,mDAAmD,CAAC,CAAC,CAAC;IACjE;EACF,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdU,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEP,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/DhB,OAAA;MAAAgB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9Bf,KAAK,iBAAIL,OAAA;MAAGa,KAAK,EAAE;QAAEQ,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpB,OAAA;MAAIa,KAAK,EAAE;QAAES,aAAa,EAAE,MAAM;QAAER,OAAO,EAAE;MAAE,CAAE;MAAAE,QAAA,EAC9Cb,eAAe,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC9BzB,OAAA;QAEEa,KAAK,EAAE;UACLa,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBb,OAAO,EAAE,MAAM;UACfc,YAAY,EAAE,MAAM;UACpBC,eAAe,EAAE;QACnB,CAAE;QAAAb,QAAA,EAEDQ,GAAG,CAACM;MAAc,GATdL,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUR,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;;AAED;AAAAlB,EAAA,CA/CMD,qBAAqB;AAAA8B,EAAA,GAArB9B,qBAAqB;AAgD3B,eAAeA,qBAAqB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}