{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pit\\\\Desktop\\\\RannaBhai\\\\frontend\\\\src\\\\components\\\\RecipeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Assuming you're using React Router\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the recipe ID from the URL\n  const [recipe, setRecipe] = useState(null); // State to store recipe details\n  const [error, setError] = useState(null); // State to store any error\n  const [loading, setLoading] = useState(true); // State to manage loading\n  const [searchQuery, setSearchQuery] = useState(''); // State for glossary search\n  const [glossaryResults, setGlossaryResults] = useState([]); // State for glossary search results\n  const [glossaryError, setGlossaryError] = useState(null); // State for glossary search error\n\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const response = await axios.get(`http://localhost:1240/recipe/${id}`);\n        console.log('Fetched recipe:', response.data); // Log the fetched recipe\n        setRecipe(response.data); // Set the recipe data\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (err) {\n        console.error('Error fetching recipe:', err); // Log the error\n        setError(err.response ? err.response.data.message : \"Error fetching recipe\");\n        setLoading(false); // Set loading to false even if there's an error\n      }\n    };\n    fetchRecipe();\n  }, [id]);\n\n  // // Glossary search functionality\n  // const handleSearchChange = (e) => {\n  //   setSearchQuery(e.target.value);\n  // };\n\n  // const handleGlossarySearchSubmit = async (e) => {\n  //   e.preventDefault();\n  //   if (searchQuery.trim() === '') {\n  //     setGlossaryError('Please enter a search term.');\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await axios.get(`http://localhost:1240/RecipeDetails`, {\n  //       params: { q: searchQuery },\n  //     });\n  //     setGlossaryResults(response.data); // Assuming the response is an array of glossary terms\n  //     setGlossaryError(null); // Clear any previous errors\n  //   } catch (err) {\n  //     setGlossaryError(err.response?.data.message || 'Error searching for glossary terms.');\n  //   }\n  // };\n\n  // Conditional rendering\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this); // Show loading message while fetching data\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this); // Display error message if there's an error\n  }\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Recipe not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this); // Handle case where recipe is not found\n  }\n\n  // Render recipe details if everything is fine\n  // Assuming recipe_procedure is an object with from, by, and instructions\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.recipe_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"No. of Servings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }, this), \" \", recipe.no_of_servings]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Cuisine:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), \" \", recipe.cuisine]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Diet Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }, this), \" \", recipe.diet_type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"General Pricing:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this), \" $\", recipe.general_pricing]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipe.ingredient_list.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Procedure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"From:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this), \" \", recipe.recipe_procedure.from]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }, this), \" \", recipe.recipe_procedure.by]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this), \" \", recipe.recipe_procedure.instructions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_s(RecipeDetails, \"gyJAWVEGD2dQSjajET3oHqwtZ3g=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetails;\nexport default RecipeDetails;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","RecipeDetails","_s","id","recipe","setRecipe","error","setError","loading","setLoading","searchQuery","setSearchQuery","glossaryResults","setGlossaryResults","glossaryError","setGlossaryError","fetchRecipe","response","get","console","log","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","recipe_name","no_of_servings","cuisine","diet_type","general_pricing","ingredient_list","map","ingredient","index","recipe_procedure","from","by","instructions","_c","$RefreshReg$"],"sources":["C:/Users/pit/Desktop/RannaBhai/frontend/src/components/RecipeDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"; // Assuming you're using React Router\r\nimport axios from \"axios\";\r\n\r\nconst RecipeDetails = () => {\r\n  const { id } = useParams(); // Get the recipe ID from the URL\r\n  const [recipe, setRecipe] = useState(null); // State to store recipe details\r\n  const [error, setError] = useState(null); // State to store any error\r\n  const [loading, setLoading] = useState(true); // State to manage loading\r\n  const [searchQuery, setSearchQuery] = useState(''); // State for glossary search\r\n  const [glossaryResults, setGlossaryResults] = useState([]); // State for glossary search results\r\n  const [glossaryError, setGlossaryError] = useState(null); // State for glossary search error\r\n\r\n  useEffect(() => {\r\n    const fetchRecipe = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:1240/recipe/${id}`);\r\n            console.log('Fetched recipe:', response.data); // Log the fetched recipe\r\n            setRecipe(response.data); // Set the recipe data\r\n            setLoading(false); // Set loading to false after data is fetched\r\n        } catch (err) {\r\n            console.error('Error fetching recipe:', err); // Log the error\r\n            setError(err.response ? err.response.data.message : \"Error fetching recipe\");\r\n            setLoading(false); // Set loading to false even if there's an error\r\n        }\r\n    };\r\n    fetchRecipe();\r\n}, [id]);\r\n\r\n// // Glossary search functionality\r\n// const handleSearchChange = (e) => {\r\n//   setSearchQuery(e.target.value);\r\n// };\r\n\r\n// const handleGlossarySearchSubmit = async (e) => {\r\n//   e.preventDefault();\r\n//   if (searchQuery.trim() === '') {\r\n//     setGlossaryError('Please enter a search term.');\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     const response = await axios.get(`http://localhost:1240/RecipeDetails`, {\r\n//       params: { q: searchQuery },\r\n//     });\r\n//     setGlossaryResults(response.data); // Assuming the response is an array of glossary terms\r\n//     setGlossaryError(null); // Clear any previous errors\r\n//   } catch (err) {\r\n//     setGlossaryError(err.response?.data.message || 'Error searching for glossary terms.');\r\n//   }\r\n// };\r\n\r\n  // Conditional rendering\r\n  if (loading) {\r\n    return <p>Loading...</p>; // Show loading message while fetching data\r\n  }\r\n\r\n  if (error) {\r\n    return <p style={{ color: 'red' }}>{error}</p>; // Display error message if there's an error\r\n  }\r\n\r\n  if (!recipe) {\r\n    return <p>Recipe not found.</p>; // Handle case where recipe is not found\r\n  }\r\n\r\n  // Render recipe details if everything is fine\r\n  // Assuming recipe_procedure is an object with from, by, and instructions\r\nreturn (\r\n  <div>\r\n      <h1>{recipe.recipe_name}</h1>\r\n      <p><strong>No. of Servings:</strong> {recipe.no_of_servings}</p>\r\n      <p><strong>Cuisine:</strong> {recipe.cuisine}</p>\r\n      <p><strong>Diet Type:</strong> {recipe.diet_type}</p>\r\n      <p><strong>General Pricing:</strong> ${recipe.general_pricing}</p>\r\n      <h2>Ingredients</h2>\r\n      <ul>\r\n          {recipe.ingredient_list.map((ingredient, index) => (\r\n              <li key={index}>{ingredient}</li>\r\n          ))}\r\n      </ul>\r\n      <h2>Procedure</h2>\r\n      <p><strong>From:</strong> {recipe.recipe_procedure.from}</p>\r\n      <p><strong>By:</strong> {recipe.recipe_procedure.by}</p>\r\n      <p><strong>Instructions:</strong> {recipe.recipe_procedure.instructions}</p>\r\n      {/* Glossary Search Section\r\n      <h2>Glossary Search</h2>\r\n      <form onSubmit={handleGlossarySearchSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search glossary...\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          style={{ padding: '10px', width: '300px' }}\r\n        />\r\n        <button type=\"submit\" style={{ padding: '10px' }}>Search</button>\r\n      </form>\r\n      // After the glossary search form\r\n<h2>Glossary Results</h2>\r\n{glossaryResults.length > 0 ? (\r\n    <ul>\r\n        {glossaryResults.map((term, index) => (\r\n            <li key={index}>\r\n                <strong>{term.term}:</strong> {term.definition}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n) : (\r\n    <p>No glossary terms found.</p>\r\n)} */}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default RecipeDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}