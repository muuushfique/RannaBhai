{"ast":null,"code":"router.put('/api/recipe/:id', async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params; // Recipe ID\n    const {\n      like_count,\n      dislike_count\n    } = req.body; // Updated counts\n\n    const updatedRecipe = await schemas.Recipe.findByIdAndUpdate(id, {\n      $set: {\n        like_count,\n        dislike_count\n      }\n    }, {\n      new: true\n    } // Return the updated document\n    );\n    if (!updatedRecipe) {\n      return res.status(404).json({\n        message: \"Recipe not found\"\n      });\n    }\n    res.json(updatedRecipe); // Return updated recipe\n  } catch (error) {\n    console.error(\"Error updating recipe:\", error);\n    res.status(500).json({\n      message: \"Server error\",\n      error: error.message\n    });\n  }\n});","map":{"version":3,"names":["router","put","req","res","id","params","like_count","dislike_count","body","updatedRecipe","schemas","Recipe","findByIdAndUpdate","$set","new","status","json","message","error","console"],"sources":["C:/Users/holme/OneDrive/Documents/Coding/RannaBhai2.0/frontend/src/components/TrendingRecipe.js"],"sourcesContent":["router.put('/api/recipe/:id', async (req, res) => {\r\n  try {\r\n    const { id } = req.params; // Recipe ID\r\n    const { like_count, dislike_count } = req.body; // Updated counts\r\n\r\n    const updatedRecipe = await schemas.Recipe.findByIdAndUpdate(\r\n      id,\r\n      { $set: { like_count, dislike_count } },\r\n      { new: true } // Return the updated document\r\n    );\r\n\r\n    if (!updatedRecipe) {\r\n      return res.status(404).json({ message: \"Recipe not found\" });\r\n    }\r\n\r\n    res.json(updatedRecipe); // Return updated recipe\r\n  } catch (error) {\r\n    console.error(\"Error updating recipe:\", error);\r\n    res.status(500).json({ message: \"Server error\", error: error.message });\r\n  }\r\n});\r\n"],"mappings":"AAAAA,MAAM,CAACC,GAAG,CAAC,iBAAiB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAM;MAAEC;IAAG,CAAC,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC;IAC3B,MAAM;MAAEC,UAAU;MAAEC;IAAc,CAAC,GAAGL,GAAG,CAACM,IAAI,CAAC,CAAC;;IAEhD,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,MAAM,CAACC,iBAAiB,CAC1DR,EAAE,EACF;MAAES,IAAI,EAAE;QAAEP,UAAU;QAAEC;MAAc;IAAE,CAAC,EACvC;MAAEO,GAAG,EAAE;IAAK,CAAC,CAAC;IAChB,CAAC;IAED,IAAI,CAACL,aAAa,EAAE;MAClB,OAAON,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAmB,CAAC,CAAC;IAC9D;IAEAd,GAAG,CAACa,IAAI,CAACP,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9Cf,GAAG,CAACY,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,cAAc;MAAEC,KAAK,EAAEA,KAAK,CAACD;IAAQ,CAAC,CAAC;EACzE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}